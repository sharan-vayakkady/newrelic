name: Enable/Disable New Relic Synthetic Monitor with name

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (enable or disable)'
        required: true
        default: 'enable'
        options:
          - 'enable'
          - 'disable'

jobs:
  enable-disable-monitor:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_REGION: us-east-1
      S3_BUCKET_NAME: ssv-github
      S3_OBJECT_KEY: last_run_monitors.txt
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}  # Store your Slack webhook URL as a secret in your GitHub repository

    steps:
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::476057914212:role/github-action-role
          role-session-name: MySessionName

      - name: Get New Relic API key from AWS Secret Manager
        id: secret-manager
        run: |
          secret_value=$(aws secretsmanager get-secret-value --secret-id /ecomm/synthetic-monitor-qa/newrelic-api --query 'SecretString' --output text)
          api_key=$(echo $secret_value | jq -r '.api_key')
          echo "::set-output name=api_key::$api_key"
          
      - name: List monitors
        id: list-monitors
        run: |
          monitors=$(curl -s -X GET -H "Api-Key:${{ steps.secret-manager.outputs.api_key }}" \
            "https://synthetics.newrelic.com/synthetics/api/v3/monitors" \
            | jq '[.monitors[] | select(.name | startswith("QA"))]')
          echo "$monitors" > monitors.json
          
      - name: Enable or Disable Synthetic Monitors
        env:
          NEWRELIC_API_KEY: "${{ steps.secret-manager.outputs.api_key }}"
        run: |
          # Your existing script for enabling or disabling monitors using the New Relic API
          
      - name: Notify Slack for disable
        if: ${{ github.event.inputs.action == 'disable' }}
        run: |
          disabled_monitors=$(cat last_run_monitors.txt)
          monitors_after_disable=$(cat monitors.json | jq -r '.[] | select(.status == "ENABLED") | .name')
          message="Disabled monitors:\n$disabled_monitors\n\nMonitors still enabled after disable action:\n$monitors_after_disable"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"$message\"}" $SLACK_WEBHOOK_URL
          
      - name: Notify Slack for enable
        if: ${{ github.event.inputs.action == 'enable' }}
        run: |
          already_enabled_monitors=$(cat monitors.json | jq -r '.[] | select(.status == "ENABLED") | .name')
          new_monitors_to_enable=$(cat monitors.json | jq -r '.[] | select(.status == "DISABLED") | .name')
          message="Enabled monitors:\n$new_monitors_to_enable\n\nAlready Enabled Monitors:\n$already_enabled_monitors"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"$message\"}" $SLACK_WEBHOOK_URL
