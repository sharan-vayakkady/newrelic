name: Enable/Disable New Relic Synthetic Monitor with name

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (enable or disable)'
        required: true
        default: 'enable'
        options:
          - 'enable'
          - 'disable'

jobs:
  enable-disable-monitor:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get New Relic API key from AWS Secret Manager
        id: newrelic-secret
        run: |
          echo "::set-output name=api_key::$(aws secretsmanager get-secret-value --secret-id '/ecomm/synthetic-monitor-qa/newrelic-api' --query 'SecretString' --output text)"

      - name: List monitors
        id: list-monitors
        run: |
          monitors=$(curl -s -X GET -H "Api-Key: ${{ steps.newrelic-secret.outputs.api_key }}" \
            "https://synthetics.newrelic.com/synthetics/api/v3/monitors" \
            | jq -r '.monitors[] | select(.name | startswith("QA")) | .id')
          echo "$monitors" > monitors.txt

      - name: Enable or Disable Synthetic Monitors
        run: |
          if [ "${{ github.event.inputs.action }}" == "enable" ]; then
            monitors_to_enable=$(cat monitors.txt)
            if [ -n "$monitors_to_enable" ]; then
              for monitor_id in $monitors_to_enable; do
                curl -X PATCH -H "Api-Key: ${{ steps.newrelic-secret.outputs.api_key }}" \
                  -H 'Content-Type: application/json' \
                  "https://synthetics.newrelic.com/synthetics/api/v3/monitors/$monitor_id" \
                  -d '{ "status" : "enabled" }'
                echo "Synthetic monitor ($monitor_id) enabled."
              done
            else
              echo "No disabled monitors to enable."
            fi
          elif [ "${{ github.event.inputs.action }}" == "disable" ]; then
            monitors_to_disable=$(cat monitors.txt)
            if [ -n "$monitors_to_disable" ]; then
              for monitor_id in $monitors_to_disable; do
                curl -X PATCH -H "Api-Key: ${{ steps.newrelic-secret.outputs.api_key }}" \
                  -H 'Content-Type: application/json' \
                  "https://synthetics.newrelic.com/synthetics/api/v3/monitors/$monitor_id" \
                  -d '{ "status" : "disabled" }'
                echo "Synthetic monitor ($monitor_id) disabled."
              done
            else
              echo "No enabled monitors to disable."
            fi
          fi

      - name: Notify Slack
        if: ${{ github.event.inputs.action == 'disable' || github.event.inputs.action == 'enable' }}
        run: |
          action="${{ github.event.inputs.action }}"
          monitors_list=$(cat monitors.txt | tr '\n' ', ' | sed 's/,$//')
          message="Synthetic monitors $action action completed. Monitors: $monitors_list"
          SLACK_WEBHOOK_URL=$(aws secretsmanager get-secret-value --secret-id '/ecomm/synthetic-monitor-qa/slack-webhook' --query 'SecretString' --output text)
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"$message\"}" "$SLACK_WEBHOOK_URL"
